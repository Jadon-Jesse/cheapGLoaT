{"version":3,"sources":["web3.js","logo.svg","cheapGloat.js","containers/Layout.js","containers/HomeView.js","containers/GloatView.js","containers/AboutView.js","containers/SubmitView.js","containers/NewView.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["web3","process","REACT_APP_INFURA_LINK","window","ethereum","Web3","enable","error","console","log","ethContract","version","eth","Contract","CustomLayout","props","state","web3Connected","initPageData","a","w3Available","cheapGloat","getAccounts","accounts","length","setState","handleConnectWeb3Click","event","data","this","fixed","userLayout","userWeb3Comp","Label","as","Icon","name","onClick","Segment","inverted","textAlign","vertical","Menu","pointing","secondary","stackable","Container","Item","link","Button","color","to","pathname","position","children","React","Component","withRouter","HomeView","curMsg","value","message","accountsAvailable","accountList","cRoundStartTime","userCanCallNext","loading","accAvailable","usrNxt","methods","roundStartTime","call","roundStart","roundStartDt","Date","userNow","now","dtMili","Math","abs","handleClickCallNextRound","callNextRoundPickWinner","checkIfNextRoundAndPickWinner","send","from","gas","submitButton","callNextButton","primary","size","icon","labelPosition","disabled","basic","style","padding","height","text","className","Header","content","fontSize","fontWeight","marginBottom","marginTop","GloatView","gloatCount","gloatList","roundNum","gloatIndex","numGloats","glts","i","theGloats","gloatI","push","listItems","map","row","index","subAddr","upVoteLabelObj","upvoteCount","downVoteLabelObj","downvoteCount","Content","maxWidth","minWidth","title","Description","Extra","paddingLeft","float","label","subUrlTruncated","str","start","end","substr","truncate","subUrl","roundNumber","href","target","subCaption","subId","minHeight","margin","Group","divided","AboutView","SubmitView","linkUrl","linkCaption","submittedLinkUrl","submittedLinkCaption","handleSubmit","onSubmit","handleChange","e","submitLink","Grid","Column","Card","centered","fluid","Form","Field","TextArea","onChange","placeholder","Input","type","NewView","newSubs","currentRoundNum","rnum","subs","submissions","subI","handleClickUpvote","buttonClickId","submitUpvoteAsync","sId","upvoteSubmissionById","utils","toWei","result","handleClickDownvote","submitDownvotevoteAsync","downvoteSubmissionById","BaseRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.518dc268.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nconst INFURA_KEY = process.env.REACT_APP_INFURA_LINK;\r\nlet web3;\r\n\r\n// first check if we are on browser and userhas metamask\r\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n  // we are in browser\r\n  // and user has metamask\r\n  web3 = new Web3(window.ethereum);\r\n\r\n  try {\r\n    // Request account access if needed\r\n    window.ethereum.enable()\r\n    // Acccounts now exposed\r\n  } catch (error) {\r\n    // User denied account access...\r\n    console.log(\"Unable to enable web3\");\r\n  }\r\n\r\n}\r\nelse {\r\n  console.log(\"Please use metamask to enable web3\");\r\n  // todo: add custom provider for non-metamask users\r\n  // try create provider\r\n  // const provider = new Web3.providers.HttpProvider(INFURA_KEY);\r\n  web3 = null;\r\n  // web3 = new Web3(provider);\r\n}\r\n\r\n\r\nexport default web3;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import web3 from './web3';\r\n// const fs = require('fs-extra');\r\n// import fs from 'fs-extra';\r\nlet ethContract;\r\n\r\nif (web3 !== null) {\r\n    console.log(web3.version);\r\n    console.log(\"Got3\");\r\n    const address = '0x738a6F545fe742d64E7496Eb95CdbEe7541012C0';\r\n    const contractObj = [\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"checkIfNextRoundAndPickWinner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"currentRoundNum\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"subId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"downvoteSubmissionById\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"gloatIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"manager\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"roundIntervalSeconds\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"roundStartTime\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"roundSubAddrs\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"roundSubAddrsKeys\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"roundSubLinks\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"roundSubLinksKeys\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"subCount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"subIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"submissions\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"subId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"subAddr\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"subUrl\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"subCaption\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"roundNumber\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"upvoteCount\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"downvoteCount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"url\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"caption\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"submitLink\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"theGloatLinks\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"theGloats\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"subAddr\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"subUrl\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"subCaption\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"roundNumber\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"upvoteCount\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"downvoteCount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"subId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"upvoteSubmissionById\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n\r\n    ethContract = new web3.eth.Contract(contractObj, address);\r\n}\r\nelse {\r\n    console.log(\"No 3\");\r\n    ethContract = null\r\n}\r\n\r\n\r\n\r\n\r\nexport default ethContract;","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\n// import { createMedia } from '@artsy/fresnel';\r\n// import PropTypes from 'prop-types';\r\nimport web3 from '../web3';\r\nimport cheapGloat from '../cheapGloat';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Icon,\r\n  Menu,\r\n  Segment,\r\n  Label,\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass CustomLayout extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    web3Connected: false,\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    // const { pathname } = this.props.location;\r\n    // console.log(pathname);\r\n    // this.setCurrentMenuItemActive();\r\n\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts;\r\n    let w3Available = false;\r\n\r\n    if (web3 !== null && cheapGloat !== null) {\r\n      // console.log(web3.version);\r\n      // console.log(\"Got3\");\r\n      accounts = await web3.eth.getAccounts();\r\n      // console.log(accounts);\r\n      if (accounts.length > 0) {\r\n        w3Available = true;\r\n      }\r\n      else {\r\n        w3Available = false;\r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      w3Available = false;\r\n\r\n    }\r\n    this.setState({ web3Connected: w3Available });\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  handleConnectWeb3Click = (event, data) => {\r\n    console.log(\"web3 connect clicked\");\r\n    // console.log(event);\r\n    // console.log(data);\r\n    try {\r\n      // Request account access if needed\r\n      window.ethereum.enable();\r\n      // Acccounts now exposed\r\n      this.setState({ web3Connected: true });\r\n    } catch (error) {\r\n      // User denied account access...\r\n      console.log(\"Unable to enable web3\");\r\n      this.setState({ web3Connected: false });\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // const { children } = this.props\r\n    const fixed = this.state.fixed;\r\n    let userLayout = null;\r\n\r\n    var authMenuItems = null;\r\n\r\n    let userWeb3Comp = null;\r\n\r\n    if (this.state.web3Connected === true) {\r\n      userWeb3Comp = (\r\n        <Label as='a'>\r\n          <Icon name='circle' /> Connected\r\n        </Label>\r\n      );\r\n    }\r\n    else {\r\n      userWeb3Comp = (\r\n        <Label as='a' onClick={this.handleConnectWeb3Click}>\r\n          <Icon name='circle outline' /> Connect\r\n        </Label>\r\n      );\r\n    }\r\n\r\n    userLayout = (\r\n      <div>\r\n        <Segment\r\n          inverted\r\n          textAlign='center'\r\n          vertical\r\n        >\r\n          <Menu\r\n            inverted\r\n            pointing\r\n            secondary\r\n            stackable\r\n          >\r\n            <Container>\r\n              <Menu.Item name=\"GloaT\" link>\r\n                <Button inverted color=\"white\">\r\n                  <Link\r\n                    to={{ pathname: \"/cheapGLoaT/gloat\" }}\r\n                  >\r\n                    GLoaT\r\n                  </Link>\r\n                </Button>\r\n              </Menu.Item>\r\n\r\n              <Menu.Item name=\"Home\" link >\r\n                <Link to={{ pathname: \"/cheapGLoaT/\" }} >\r\n                  Home\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n              <Menu.Item name=\"New\" link>\r\n                <Link to={{ pathname: \"/cheapGLoaT/new\" }} >\r\n                  New\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n              <Menu.Item name=\"About\" link>\r\n                <Link to={{ pathname: \"/cheapGLoaT/about\" }} >\r\n                  About\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n              <Menu.Item position='right'>\r\n                {userWeb3Comp}\r\n\r\n              </Menu.Item>\r\n            </Container>\r\n          </Menu>\r\n        </Segment>\r\n        { this.props.children}\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CustomLayout);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport PropTypes from 'prop-types';\r\nimport web3 from '../web3';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport cheapGloat from '../cheapGloat';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass HomeView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    curMsg: \"\",\r\n    value: \"\",\r\n    message: \"\",\r\n    accountsAvailable: false,\r\n    accountList: [],\r\n    cRoundStartTime: null,\r\n    userCanCallNext: false,\r\n    loading: false,\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts = [];\r\n    let accAvailable = false;\r\n    let usrNxt = false;\r\n\r\n\r\n    if (web3 !== null && cheapGloat !== null) {\r\n      // console.log(web3.version);\r\n      // console.log(\"Got3\");\r\n      accounts = await web3.eth.getAccounts();\r\n      // console.log(accounts);\r\n      if (accounts.length > 0) {\r\n        accAvailable = true;\r\n      }\r\n      else {\r\n        accAvailable = false;\r\n\r\n      }\r\n\r\n      // const message = await cheapGloat.methods.chairperson().call();\r\n      const roundStart = await cheapGloat.methods.roundStartTime().call();\r\n      var roundStartDt = new Date(roundStart * 1000);\r\n      console.log(\"Round Start:\", roundStart, \"as dt\", roundStartDt);\r\n\r\n      const userNow = new Date(Date.now());\r\n      console.log(\"User Now\", userNow);\r\n      // get diff between round start and users now in milisecs\r\n      const dtMili = Math.abs(userNow - roundStartDt);\r\n      console.log(dtMili);\r\n\r\n      // const milsRoundInt = 21600000;\r\n      const milsRoundInt = 21600;\r\n\r\n      if (dtMili > milsRoundInt) {\r\n        // enable pick winner for the current user\r\n        usrNxt = true;\r\n\r\n      }\r\n\r\n    }\r\n    else {\r\n      accAvailable = false;\r\n\r\n    }\r\n    this.setState({ accountsAvailable: accAvailable, userCanCallNext: usrNxt, accountList: accounts });\r\n\r\n  };\r\n\r\n  handleClickCallNextRound = () => {\r\n    console.log(\"User called next\");\r\n    // now try call next round async\r\n    this.callNextRoundPickWinner();\r\n\r\n  }\r\n\r\n  callNextRoundPickWinner = async () => {\r\n    this.setState({ loading: true });\r\n    try {\r\n      const result = await cheapGloat.methods.checkIfNextRoundAndPickWinner().send({\r\n        from: this.state.accountList[0],\r\n        gas: \"5000000\",\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error, unable to pick winner. Err:\", error);\r\n    }\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n    let submitButton = null;\r\n    let callNextButton = null;\r\n\r\n    if (this.state.accountsAvailable === true) {\r\n      submitButton = (\r\n        <Link to={{ pathname: \"/cheapGLoaT/submit\" }}>\r\n          <Button primary size='huge' icon labelPosition='right'>\r\n            Submit\r\n            <Icon name='right arrow' />\r\n          </Button>\r\n        </Link>\r\n      );\r\n    }\r\n    else {\r\n      submitButton = (\r\n        <div>\r\n          <Button primary size='huge' disabled icon labelPosition='right'>\r\n            Submit\r\n              <Icon name='right arrow' />\r\n          </Button>\r\n          <p>(Unable to connect to web3 directly - try installing metamask to participate)</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (this.state.userCanCallNext === true) {\r\n      callNextButton = (\r\n        <Button loading={this.state.loading} basic color='orange' size='huge' onClick={this.handleClickCallNextRound} icon labelPosition='right'>\r\n          Next Round\r\n          <Icon name='recycle' />\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    userLayout = (\r\n      <Segment\r\n        inverted\r\n        textAlign='center'\r\n        style={{ padding: '1em 0em', height: '100vh' }}\r\n        vertical\r\n      >\r\n        <Container text>\r\n          <div className=\"logoText\">\r\n            <p>cheap</p>GLOAT\r\n\r\n              </div>\r\n          <Header\r\n            as='h1'\r\n            content='Submit your greatest link'\r\n            inverted\r\n            style={{\r\n              fontSize: '4em',\r\n              fontWeight: 'normal',\r\n              marginBottom: '1em',\r\n              marginTop: '1em',\r\n            }}\r\n          />\r\n          <div>\r\n            <div style={{ marginBottom: '1em' }}>\r\n              {submitButton}\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '1em' }}>\r\n              {callNextButton}\r\n            </div>\r\n          </div>\r\n          <Header\r\n            as='h2'\r\n            inverted\r\n            style={{\r\n              fontSize: '1.7em',\r\n              fontWeight: 'normal',\r\n              marginTop: '1.5em',\r\n            }}\r\n          >\r\n            <p>Or browse <Link to={{ pathname: \"/cheapGLoaT/new\" }}>new submissions</Link></p>\r\n\r\n          </Header>\r\n\r\n\r\n          {this.state.curMsg}\r\n\r\n\r\n        </Container>\r\n      </Segment>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(HomeView);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\n// import { createMedia } from '@artsy/fresnel';\r\n// import PropTypes from 'prop-types';\r\n// import web3 from './web3';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Item,\r\n  Label,\r\n  Card\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport cheapGloat from '../cheapGloat';\r\nimport web3 from '../web3';\r\n\r\nconst ZERO_ADDR = \"0x0000000000000000000000000000000000000000\";\r\n\r\n\r\nclass GloatView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    curMsg: \"\",\r\n    value: \"\",\r\n    message: \"\",\r\n    gloatCount: 0,\r\n    gloatList: [],\r\n    loading: false,\r\n    roundNum: null,\r\n    accountsAvailable: false,\r\n    accountList: []\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts;\r\n    let accAvailable = false;\r\n    if (web3 !== null && cheapGloat !== null) {\r\n      // console.log(web3.version);\r\n      // console.log(\"Got3\");\r\n      accounts = await web3.eth.getAccounts();\r\n      // console.log(accounts);\r\n      if (accounts.length > 0) {\r\n        accAvailable = true;\r\n      }\r\n      else {\r\n        accAvailable = false;\r\n      }\r\n    }\r\n    else {\r\n      accAvailable = false;\r\n    }\r\n\r\n    if (accAvailable == true) {\r\n      // user has web3 available\r\n      // fetch list of current submissions\r\n      // const rnum = await cheapGloat.methods.currentRoundNum().call();\r\n      // console.log(rnum);\r\n\r\n      this.setState({\r\n        loading: true,\r\n        accountsAvailable: accAvailable,\r\n        accountList: accounts,\r\n      });\r\n\r\n      // first get the number of gloats\r\n      const numGloats = await cheapGloat.methods.gloatIndex().call();\r\n\r\n      // use roundNum for now\r\n      // const numGloats = await cheapGloat.methods.currentRoundNum().call();\r\n      // TODO: add paganation logic\r\n\r\n      var glts = [];\r\n      if (numGloats > 0) {\r\n        for (var i = 0; i < numGloats; i++) {\r\n          const gloatI = await cheapGloat.methods.theGloats(i).call();\r\n          glts.push(gloatI);\r\n\r\n        }\r\n      }\r\n\r\n      // var subs = [];\r\n\r\n      // for (var i = 0; i < 20; i++) {\r\n      //   const subI = await cheapGloat.methods.submissions(i).call();\r\n      //   subs.push(subI);\r\n\r\n      // }\r\n\r\n\r\n      // console.log(message);\r\n      this.setState({\r\n        gloatList: glts,\r\n        loading: false\r\n      });\r\n\r\n\r\n    }\r\n    else {\r\n      // user does not have web3\r\n      // let them know\r\n      this.setState({\r\n        loading: false,\r\n        accountsAvailable: accAvailable,\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n\r\n\r\n    let listItems = this.state.gloatList.map((row, index) => {\r\n      const truncate = (str, start, end) => {\r\n        // only if str len is > 42\r\n        if (str.length > start) {\r\n\r\n          let seperator = '...';\r\n          return str.substr(0, start) + seperator + str.substr(str.length - end);\r\n        }\r\n        else {\r\n          return str;\r\n        }\r\n      }\r\n\r\n      const position = (index + 1);\r\n\r\n\r\n      if (row.subAddr == ZERO_ADDR) {\r\n        // use subAddr to tell if this post has been actually submitted\r\n\r\n        const upVoteLabelObj = { basic: true, content: row.upvoteCount };\r\n        const downVoteLabelObj = { basic: true, pointing: 'right', content: row.downvoteCount };\r\n        return (\r\n          <Item key={position}>\r\n\r\n            <Item.Content style={{ maxWidth: \"40px\", minWidth: \"40px\" }} >\r\n              <Item.Header>{position}.</Item.Header>\r\n            </Item.Content>\r\n\r\n            <Item.Content >\r\n\r\n              <Item.Header >\r\n                <div className=\"container\" >\r\n                  <span title=\"\">\r\n                  </span>\r\n                </div>\r\n\r\n              </Item.Header>\r\n              <Item.Description> <Label size=\"mini\">by {row.subAddr}</Label></Item.Description>\r\n              <Item.Extra>\r\n\r\n\r\n              </Item.Extra>\r\n            </Item.Content>\r\n\r\n            <Item.Content style={{ paddingLeft: \"10px\" }}>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  disabled\r\n                  icon='arrow up'\r\n                  color=\"blue\"\r\n                  label={upVoteLabelObj}\r\n                  labelPosition='right'\r\n                />\r\n                <Button\r\n                  disabled\r\n                  icon='arrow down'\r\n                  color=\"black\"\r\n                  label={downVoteLabelObj}\r\n                  labelPosition='left'\r\n                />\r\n              </div>\r\n            </Item.Content>\r\n\r\n          </Item>\r\n        );\r\n\r\n      }\r\n      else {\r\n\r\n        const subUrlTruncated = truncate(row.subUrl, 42, 3);\r\n        // console.log(row);\r\n\r\n\r\n        // create the upvote/downvote label objects for this row\r\n        const upVoteLabelObj = { basic: true, content: row.upvoteCount, color: \"blue\" };\r\n        const downVoteLabelObj = { basic: true, pointing: 'right', content: row.downvoteCount, color: \"black\" };\r\n        return (\r\n          <Item key={index}>\r\n\r\n            <Item.Content style={{ maxWidth: \"40px\", minWidth: \"40px\" }} >\r\n              <Item.Header>{row.roundNumber}.</Item.Header>\r\n            </Item.Content>\r\n\r\n            <Item.Content >\r\n\r\n              <Item.Header href={row.subUrl} target='_blank'>\r\n                <div className=\"container\" >\r\n                  <span title={row.subUrl}>\r\n                    {subUrlTruncated}\r\n                  </span>\r\n                </div>\r\n\r\n              </Item.Header>\r\n              <Item.Description>{row.subCaption} <Label color=\"blue\" size=\"mini\">by {row.subAddr}</Label></Item.Description>\r\n              <Item.Extra>\r\n\r\n\r\n              </Item.Extra>\r\n            </Item.Content>\r\n\r\n            <Item.Content style={{ paddingLeft: \"10px\" }}>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  icon='arrow up'\r\n                  color=\"blue\"\r\n                  label={upVoteLabelObj}\r\n                  labelPosition='right'\r\n                  value={row.subId}\r\n                />\r\n                <Button\r\n                  icon='arrow down'\r\n                  color=\"black\"\r\n                  label={downVoteLabelObj}\r\n                  labelPosition='left'\r\n                  value={row.subId}\r\n                />\r\n              </div>\r\n            </Item.Content>\r\n\r\n          </Item>\r\n        );\r\n      }\r\n\r\n    });\r\n\r\n\r\n    userLayout = (\r\n      <div  >\r\n        <Segment\r\n          inverted\r\n          textAlign='center'\r\n          style={{ minHeight: 100, padding: '1em 0em' }}\r\n          vertical\r\n          loading={this.state.loading}\r\n        >\r\n          <Container text >\r\n            <Header\r\n              as='h1'\r\n              inverted\r\n              style={{\r\n                fontWeight: 'normal',\r\n                marginBottom: '1em',\r\n                marginTop: '1em',\r\n              }}\r\n            >\r\n              Greatest Links of all Time\r\n            </Header>\r\n          </Container>\r\n\r\n        </Segment>\r\n\r\n        <Segment\r\n          style={{ margin: '3em', padding: '1em 0em' }}\r\n          vertical\r\n          size=\"small\"\r\n        >\r\n          <Item.Group divided>\r\n            {listItems}\r\n          </Item.Group>\r\n        </Segment>\r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(GloatView);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport PropTypes from 'prop-types';\r\n// import web3 from './web3';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass AboutView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n    userLayout = (\r\n      <div>\r\n        <Segment\r\n          inverted\r\n          textAlign='center'\r\n          style={{ minHeight: 100, padding: '1em 0em' }}\r\n          vertical\r\n        >\r\n          <Container text>\r\n            <Header\r\n              as='h1'\r\n              inverted\r\n              style={{\r\n                fontWeight: 'normal',\r\n                marginBottom: '1em',\r\n                marginTop: '1em',\r\n              }}\r\n            >\r\n              <Header.Content>\r\n                About cheapGLoaT\r\n              </Header.Content>\r\n            </Header>\r\n          </Container>\r\n\r\n        </Segment>\r\n        <Segment textAlign='center'>\r\n          <Container text>\r\n            Decentralized link aggrigation built on the cheapEthereum network (Work in progress)\r\n          </Container>\r\n\r\n\r\n        </Segment>\r\n      </div>\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(AboutView);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\nimport { createMedia } from '@artsy/fresnel';\r\nimport PropTypes from 'prop-types';\r\n// import web3 from './web3';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n  Form,\r\n  Card,\r\n  Message,\r\n  TextArea\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport web3 from '../web3';\r\n\r\nimport cheapGloat from '../cheapGloat';\r\n\r\nclass SubmitView extends Component {\r\n\r\n  state = {\r\n    linkUrl: '',\r\n    linkCaption: '',\r\n    submittedLinkUrl: '',\r\n    submittedLinkCaption: '',\r\n    message: '',\r\n    loading: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n\r\n  handleSubmit = () => {\r\n    // this.setState({ email: '', name: '' });\r\n    const { linkUrl, linkCaption } = this.state;\r\n    console.log(\"Submitted \", linkUrl, linkCaption);\r\n\r\n    this.setState({\r\n      submittedLinkUrl: linkUrl,\r\n      submittedLinkCaption: linkCaption,\r\n    });\r\n\r\n    this.onSubmit();\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  onSubmit = async () => {\r\n    // event.preventDefault();\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      this.setState({ message: \"Pending\", loading: true });\r\n\r\n      await cheapGloat.methods.submitLink(this.state.submittedLinkUrl, this.state.submittedLinkCaption).send({\r\n        from: accounts[0]\r\n      });\r\n\r\n      this.setState({ message: \"Done\", loading: false });\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error submitting\");\r\n      this.setState({ message: \"Error\", loading: false });\r\n\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n\r\n    // const { name, email, submittedName, submittedEmail } = this.state;\r\n    // const { linkUrl, linkCaption } = this.state;\r\n    // if \r\n\r\n    userLayout = (\r\n      <Segment\r\n        vertical\r\n      >\r\n        <Grid textAlign='center' style={{ height: '100vh' }}>\r\n          <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Card centered fluid>\r\n              <Card.Content>\r\n                <Form loading={this.state.loading} onSubmit={this.handleSubmit}>\r\n                  <Form.Field>\r\n                    <label>Link Url</label>\r\n                    <TextArea\r\n                      name='linkUrl'\r\n                      value={this.state.linkUrl}\r\n                      onChange={this.handleChange}\r\n                      placeholder='Enter the plain text url'\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <label>Caption</label>\r\n                    <Form.Input\r\n                      name='linkCaption'\r\n                      value={this.state.linkCaption}\r\n                      onChange={this.handleChange}\r\n                      placeholder='Enter text caption' />\r\n                  </Form.Field>\r\n                  <Button type='submit'>Submit</Button>\r\n                </Form>\r\n              </Card.Content>\r\n            </Card>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(SubmitView);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\nimport '../App.css';\r\n// import { createMedia } from '@artsy/fresnel';\r\n// import PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Item,\r\n  Label\r\n} from 'semantic-ui-react';\r\nimport web3 from '../web3';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport cheapGloat from '../cheapGloat';\r\n\r\nconst ZERO_ADDR = \"0x0000000000000000000000000000000000000000\";\r\n\r\nclass NewView extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    curMsg: \"\",\r\n    value: \"\",\r\n    message: \"\",\r\n    newSubs: [],\r\n    loading: false,\r\n    roundNum: null,\r\n    accountsAvailable: false,\r\n    accountList: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts;\r\n    let accAvailable = false;\r\n    if (web3 !== null && cheapGloat !== null) {\r\n      // console.log(web3.version);\r\n      // console.log(\"Got3\");\r\n      accounts = await web3.eth.getAccounts();\r\n      // console.log(accounts);\r\n      if (accounts.length > 0) {\r\n        accAvailable = true;\r\n      }\r\n      else {\r\n        accAvailable = false;\r\n      }\r\n    }\r\n    else {\r\n      accAvailable = false;\r\n    }\r\n\r\n    if (accAvailable == true) {\r\n      // user has web3 available\r\n      // fetch list of current submissions\r\n      const rnum = await cheapGloat.methods.currentRoundNum().call();\r\n      // console.log(rnum);\r\n\r\n      this.setState({\r\n        roundNum: rnum,\r\n        loading: true,\r\n        accountsAvailable: accAvailable,\r\n        accountList: accounts,\r\n      });\r\n\r\n      var subs = [];\r\n\r\n      for (var i = 0; i < 20; i++) {\r\n        const subI = await cheapGloat.methods.submissions(i).call();\r\n        subs.push(subI);\r\n\r\n      }\r\n\r\n\r\n      // console.log(message);\r\n      this.setState({\r\n        newSubs: subs,\r\n        loading: false\r\n      });\r\n\r\n\r\n    }\r\n    else {\r\n      // user does not have web3\r\n      // let them know\r\n      this.setState({\r\n        roundNum: null,\r\n        loading: false,\r\n        accountsAvailable: accAvailable,\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n\r\n  handleClickUpvote = (data, event) => {\r\n    console.log(\"Upvote clicked\");\r\n    // console.log(data);\r\n    const buttonClickId = event.value;\r\n    console.log(buttonClickId);\r\n    // now submit the users upvote to the network\r\n    this.submitUpvoteAsync(buttonClickId);\r\n\r\n\r\n  }\r\n\r\n  submitUpvoteAsync = async (sId) => {\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const result = await cheapGloat.methods.upvoteSubmissionById(sId).send({\r\n        from: this.state.accountList[0],\r\n        value: web3.utils.toWei(\"0.1\", \"ether\")\r\n      });\r\n      console.log(result);\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(\"Error, unable to upvote\");\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  handleClickDownvote = (data, event) => {\r\n    console.log(\"Downvote clicked\");\r\n    // console.log(data);\r\n    const buttonClickId = event.value;\r\n    this.submitDownvotevoteAsync(buttonClickId);\r\n\r\n  }\r\n\r\n\r\n  submitDownvotevoteAsync = async (sId) => {\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    try {\r\n      const result = await cheapGloat.methods.downvoteSubmissionById(sId).send({\r\n        from: this.state.accountList[0],\r\n        value: web3.utils.toWei(\"0.1\", \"ether\")\r\n      });\r\n      console.log(result);\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log(\"Error, unable to downvote\");\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n\r\n    let listItems = this.state.newSubs.map((row, index) => {\r\n      const truncate = (str, start, end) => {\r\n        // only if str len is > 42\r\n        if (str.length > start) {\r\n\r\n          let seperator = '...';\r\n          return str.substr(0, start) + seperator + str.substr(str.length - end);\r\n        }\r\n        else {\r\n          return str;\r\n        }\r\n      }\r\n\r\n      // check if this sub has data\r\n      // if not, return empty component with unclickable buttons\r\n      // console.log(row.subAddr);\r\n      // console.log(typeof row.subAddr);\r\n\r\n      const position = (index + 1);\r\n\r\n\r\n      if (row.subAddr == ZERO_ADDR) {\r\n        // use subAddr to tell if this post has been actually submitted\r\n\r\n        const upVoteLabelObj = { basic: true, content: row.upvoteCount };\r\n        const downVoteLabelObj = { basic: true, pointing: 'right', content: row.downvoteCount };\r\n        return (\r\n          <Item key={position}>\r\n\r\n            <Item.Content style={{ maxWidth: \"40px\", minWidth: \"40px\" }} >\r\n              <Item.Header>{position}.</Item.Header>\r\n            </Item.Content>\r\n\r\n            <Item.Content >\r\n\r\n              <Item.Header >\r\n                <div className=\"container\" >\r\n                  <span title=\"\">\r\n                  </span>\r\n                </div>\r\n\r\n              </Item.Header>\r\n              <Item.Description> <Label size=\"mini\">by {row.subAddr}</Label></Item.Description>\r\n              <Item.Extra>\r\n\r\n\r\n              </Item.Extra>\r\n            </Item.Content>\r\n\r\n            <Item.Content style={{ paddingLeft: \"10px\" }}>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  disabled\r\n                  icon='arrow up'\r\n                  color=\"blue\"\r\n                  label={upVoteLabelObj}\r\n                  labelPosition='right'\r\n                />\r\n                <Button\r\n                  disabled\r\n                  icon='arrow down'\r\n                  color=\"black\"\r\n                  label={downVoteLabelObj}\r\n                  labelPosition='left'\r\n                />\r\n              </div>\r\n            </Item.Content>\r\n\r\n          </Item>\r\n        );\r\n\r\n      }\r\n      else {\r\n\r\n        const subUrlTruncated = truncate(row.subUrl, 42, 3);\r\n        // console.log(row);\r\n\r\n\r\n        // create the upvote/downvote label objects for this row\r\n        const upVoteLabelObj = { basic: true, content: row.upvoteCount, color: \"blue\" };\r\n        const downVoteLabelObj = { basic: true, pointing: 'right', content: row.downvoteCount, color: \"black\" };\r\n        return (\r\n          <Item key={index}>\r\n\r\n            <Item.Content style={{ maxWidth: \"40px\", minWidth: \"40px\" }} >\r\n              <Item.Header>{row.subId}.</Item.Header>\r\n            </Item.Content>\r\n\r\n            <Item.Content >\r\n\r\n              <Item.Header href={row.subUrl} target='_blank'>\r\n                <div className=\"container\" >\r\n                  <span title={row.subUrl}>\r\n                    {subUrlTruncated}\r\n                  </span>\r\n                </div>\r\n\r\n              </Item.Header>\r\n              <Item.Description>{row.subCaption} <Label size=\"mini\">by {row.subAddr}</Label></Item.Description>\r\n              <Item.Extra>\r\n\r\n\r\n              </Item.Extra>\r\n            </Item.Content>\r\n\r\n            <Item.Content style={{ paddingLeft: \"10px\" }}>\r\n              <div style={{ float: \"right\" }}>\r\n                <Button\r\n                  onClick={this.handleClickUpvote}\r\n                  icon='arrow up'\r\n                  color=\"blue\"\r\n                  label={upVoteLabelObj}\r\n                  labelPosition='right'\r\n                  value={row.subId}\r\n                />\r\n                <Button\r\n                  onClick={this.handleClickDownvote}\r\n                  icon='arrow down'\r\n                  color=\"black\"\r\n                  label={downVoteLabelObj}\r\n                  labelPosition='left'\r\n                  value={row.subId}\r\n                />\r\n              </div>\r\n            </Item.Content>\r\n\r\n          </Item>\r\n        );\r\n      }\r\n\r\n    });\r\n\r\n\r\n    userLayout = (\r\n      <div>\r\n        <Segment\r\n          inverted\r\n          textAlign='center'\r\n          style={{ minHeight: 100, padding: '1em 0em' }}\r\n          vertical\r\n          loading={this.state.loading}\r\n        >\r\n          <Container text>\r\n            <Header\r\n              as='h1'\r\n              inverted\r\n              style={{\r\n                fontWeight: 'normal',\r\n                marginBottom: '1em',\r\n                marginTop: '1em',\r\n              }}\r\n            >\r\n              <Header.Content>\r\n                Round ({this.state.roundNum}) Submissions\r\n              </Header.Content>\r\n            </Header>\r\n\r\n          </Container>\r\n        </Segment>\r\n\r\n        <Segment\r\n          style={{ margin: '3em', padding: '1em 0em' }}\r\n          vertical\r\n          size=\"small\"\r\n        >\r\n          <Item.Group divided>\r\n            {listItems}\r\n          </Item.Group>\r\n        </Segment>\r\n      </div>\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(NewView);\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\nimport HomeView from './containers/HomeView';\r\nimport GloatView from './containers/GloatView';\r\nimport AboutView from './containers/AboutView';\r\nimport SubmitView from './containers/SubmitView';\r\nimport NewView from './containers/NewView';\r\n\r\nconst BaseRouter = () => (\r\n    <div>\r\n        <Route exact path=\"/cheapGLoaT/\" component={HomeView} />\r\n        <Route exact path=\"/cheapGLoaT/gloat\" component={GloatView} />\r\n        <Route exact path=\"/cheapGLoaT/about\" component={AboutView} />\r\n        <Route exact path=\"/cheapGLoaT/submit\" component={SubmitView} />\r\n        <Route exact path=\"/cheapGLoaT/new\" component={NewView} />\r\n        \r\n    </div>\r\n);\r\n\r\nexport default BaseRouter;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// import { createMedia } from '@artsy/fresnel';\n// import PropTypes from 'prop-types';\n// import web3 from './web3';\nimport CustomLayout from './containers/Layout';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\n\nclass App extends Component {\n\n\n\n\n\n  render() {\n\n    return (\n      <div>\n        <Router>\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}